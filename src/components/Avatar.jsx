/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 public/models/avatar.glb 
*/

import { useAnimations, useGLTF, useTexture } from '@react-three/drei';
import { useGraph } from '@react-three/fiber';
import React, { useEffect } from 'react';
import * as THREE from 'three';
import { SkeletonUtils } from 'three-stdlib';

export function Avatar(props) {
  const group = React.useRef();
  const { scene, animations } = useGLTF('models/avatar.glb');
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes } = useGraph(clone);
  const { actions, names } = useAnimations(animations, group);

  const texture = useTexture('/textures/avatar.jpg');
  texture.flipY = false;
  texture.colorSpace = THREE.SRGBColorSpace;
  const textureMaterial = new THREE.MeshStandardMaterial({ map: texture });

  useEffect(() => {
    if (actions && names.length > 0) {
      actions[names[0]].play();
    }
  }, [actions, names]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name='Scene'>
        <group name='Armature001' rotation={[0.024, 0, 0]}>
          <primitive object={nodes.Hips} />
          <skinnedMesh
            name='avaturn_body001'
            geometry={nodes.avaturn_body001.geometry}
            material={textureMaterial}
            skeleton={nodes.avaturn_body001.skeleton}
          />
          <skinnedMesh
            name='avaturn_hair_0001'
            geometry={nodes.avaturn_hair_0001.geometry}
            material={textureMaterial}
            skeleton={nodes.avaturn_hair_0001.skeleton}
          />
          <skinnedMesh
            name='avaturn_hair_1001'
            geometry={nodes.avaturn_hair_1001.geometry}
            material={textureMaterial}
            skeleton={nodes.avaturn_hair_1001.skeleton}
          />
          <skinnedMesh
            name='avaturn_look_0001'
            geometry={nodes.avaturn_look_0001.geometry}
            material={textureMaterial}
            skeleton={nodes.avaturn_look_0001.skeleton}
          />
          <skinnedMesh
            name='avaturn_shoes_0001'
            geometry={nodes.avaturn_shoes_0001.geometry}
            material={textureMaterial}
            skeleton={nodes.avaturn_shoes_0001.skeleton}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('models/avatar.glb');
